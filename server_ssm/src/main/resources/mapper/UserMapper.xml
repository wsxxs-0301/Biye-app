<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ideabobo.service.UserMapper">
  <resultMap id="BaseResultMap" type="com.ideabobo.model.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="passwd" jdbcType="VARCHAR" property="passwd" />
    <result column="roletype" jdbcType="VARCHAR" property="roletype" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birth" jdbcType="VARCHAR" property="birth" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="favs" jdbcType="VARCHAR" property="favs" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="fids" jdbcType="VARCHAR" property="fids" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="tags2" jdbcType="VARCHAR" property="tags2" />
    <result column="tags3" jdbcType="VARCHAR" property="tags3" />
    <result column="note1" jdbcType="VARCHAR" property="note1" />
    <result column="note2" jdbcType="VARCHAR" property="note2" />
    <result column="note3" jdbcType="VARCHAR" property="note3" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, passwd, roletype, email, tel, sex, birth, img, favs, openid, tags, 
    fids, note, tags2, tags3, note1, note2, note3
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tbl_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ideabobo.model.User">
    insert into tbl_user (id, username, passwd, 
      roletype, email, tel, 
      sex, birth, img, favs, 
      openid, tags, fids, 
      note, tags2, tags3, 
      note1, note2, note3
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, 
      #{roletype,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{birth,jdbcType=VARCHAR}, #{img,jdbcType=VARCHAR}, #{favs,jdbcType=VARCHAR}, 
      #{openid,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR}, #{fids,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{tags2,jdbcType=VARCHAR}, #{tags3,jdbcType=VARCHAR}, 
      #{note1,jdbcType=VARCHAR}, #{note2,jdbcType=VARCHAR}, #{note3,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ideabobo.model.User">
    insert into tbl_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="passwd != null">
        passwd,
      </if>
      <if test="roletype != null">
        roletype,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="img != null">
        img,
      </if>
      <if test="favs != null">
        favs,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="fids != null">
        fids,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="tags2 != null">
        tags2,
      </if>
      <if test="tags3 != null">
        tags3,
      </if>
      <if test="note1 != null">
        note1,
      </if>
      <if test="note2 != null">
        note2,
      </if>
      <if test="note3 != null">
        note3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null">
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="roletype != null">
        #{roletype,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        #{img,jdbcType=VARCHAR},
      </if>
      <if test="favs != null">
        #{favs,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="fids != null">
        #{fids,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="tags2 != null">
        #{tags2,jdbcType=VARCHAR},
      </if>
      <if test="tags3 != null">
        #{tags3,jdbcType=VARCHAR},
      </if>
      <if test="note1 != null">
        #{note1,jdbcType=VARCHAR},
      </if>
      <if test="note2 != null">
        #{note2,jdbcType=VARCHAR},
      </if>
      <if test="note3 != null">
        #{note3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ideabobo.model.User">
    update tbl_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null">
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="roletype != null">
        roletype = #{roletype,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=VARCHAR},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=VARCHAR},
      </if>
      <if test="favs != null">
        favs = #{favs,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="fids != null">
        fids = #{fids,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="tags2 != null">
        tags2 = #{tags2,jdbcType=VARCHAR},
      </if>
      <if test="tags3 != null">
        tags3 = #{tags3,jdbcType=VARCHAR},
      </if>
      <if test="note1 != null">
        note1 = #{note1,jdbcType=VARCHAR},
      </if>
      <if test="note2 != null">
        note2 = #{note2,jdbcType=VARCHAR},
      </if>
      <if test="note3 != null">
        note3 = #{note3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ideabobo.model.User">
    update tbl_user
    set username = #{username,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      roletype = #{roletype,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birth = #{birth,jdbcType=VARCHAR},
      img = #{img,jdbcType=VARCHAR},
      favs = #{favs,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      fids = #{fids,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      tags2 = #{tags2,jdbcType=VARCHAR},
      tags3 = #{tags3,jdbcType=VARCHAR},
      note1 = #{note1,jdbcType=VARCHAR},
      note2 = #{note2,jdbcType=VARCHAR},
      note3 = #{note3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>